- name: Install and Start APISIX on MacBook Pro
  hosts: all
  become: yes  # 仍然需要 sudo
  vars:
    ansible_become_password: "your_sudo_password"
  tasks:
    - name: 确保 Docker 运行
      shell: systemctl start docker || open -a Docker
      ignore_errors: yes

    - name: 拉取 APISIX 3.9.1-debian Docker 镜像
      shell: /usr/local/bin/docker pull apache/apisix:3.9.1-debian

    - name: 拉取 etcd 最新 Docker 镜像
      shell: /usr/local/bin/docker pull gcr.io/etcd-development/etcd:v3.5.5

    - name: 创建 Docker 自定义网络（如果不存在）
      shell: |
        if ! /usr/local/bin/docker network ls | grep -w apisix_net; then
          /usr/local/bin/docker network create apisix_net
        fi
      ignore_errors: yes

    - name: 确保 etcd 容器未运行
      shell: |
        if /usr/local/bin/docker ps -a --format '{{"{{"}}.Names{{"}}"}}' | grep -w etcd; then
          /usr/local/bin/docker rm -f etcd
        fi
      ignore_errors: yes

    - name: 运行 etcd 容器
      shell: |
        /usr/local/bin/docker run -d --name etcd \
          --network=apisix_net \  # ✅ 让 etcd 运行在 apisix_net 网络
          -p 2379:2379 \
          gcr.io/etcd-development/etcd:v3.5.5 \
          etcd --advertise-client-urls=http://0.0.0.0:2379 \
               --listen-client-urls=http://0.0.0.0:2379
      ignore_errors: yes

    - name: 等待 etcd 启动完成
      shell: |
        for i in {1..10}; do
          curl -s http://127.0.0.1:2379/version && exit 0
          sleep 2
        done
        exit 1
      register: etcd_status
      ignore_errors: yes

    - name: 显示 etcd 启动状态
      debug:
        msg: "{{ etcd_status.stdout }}"

    - name: 确保 APISIX 容器未运行
      shell: |
        if /usr/local/bin/docker ps -a --format '{{"{{"}}.Names{{"}}"}}' | grep -w apisix; then
          /usr/local/bin/docker rm -f apisix
        fi
      ignore_errors: yes

    - name: 运行 APISIX 3.9.1-debian 容器
      shell: |
        /usr/local/bin/docker run -d --name apisix \
          --network=apisix_net \  # ✅ 让 APISIX 也在 apisix_net 网络
          -p 9080:9080 -p 9443:9443 \
          -e APISIX_ETCD_HOST="http://etcd:2379" \  # ✅ 通过 etcd 容器名称连接
          apache/apisix:3.9.1-debian

    - name: 验证 APISIX 是否正常运行
      shell: |
        /usr/local/bin/docker ps --format "{{"{{"}}.Names{{"}}"}}" | grep -w apisix || true
      register: apisix_status
      changed_when: false

    - name: 显示 APISIX 运行状态
      debug:
        msg: "{{ apisix_status.stdout }}"
